<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		">

    <!--&lt;!&ndash; Scans the classpath for annotated components that will be auto-registered as Spring beans &ndash;&gt;-->
    <context:component-scan base-package="com.ashok" />
    <!-- Activates various annotations to be detected in bean classes e.g: @Autowired -->
    <context:annotation-config />

    <bean id="studentManager" class="com.ashok.manager.impl.StudentManagerImpl">
        <property name="dao" ref="studentDao"/>
    </bean>

    <bean id="studentDao" class="com.ashok.dao.impl.StudentDAOImpl"/>
    <!--<bean-->
            <!--class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />-->
        <!--<property name="ignoreResourceNotFound" value="true" />-->
        <!--<property name="ignoreUnresolvablePlaceholders" value="true"/>-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>file:${catalina.base}/conf/test-dbconfig.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="dataSourceProxy" primary="true" class="net.ttddyy.dsproxy.support.ProxyDataSource">
        <property name="dataSource" ref="dataSource"/>
        <property name="proxyConfig" ref="proxyConfig"/>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/myntra_lms" />
        <property name="username" value="root"/>
        <property name="password" value=""/>
        <property name="idleTimeout" value="200"/>
        <property name="maximumPoolSize" value="5"/>
        <property name="connectionTimeout" value="30000"/>
        <property name="validationTimeout" value="5000"/>
        <property name="initializationFailFast" value="true"/>
        <property name="maxLifetime" value="1800000"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="test-jpa"/>
        <property name="dataSource" ref="dataSourceProxy"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
                <property name="database" value="MYSQL"/>
            </bean>
        </property>
        <!--<property name="persistenceUnitPostProcessors">-->
            <!--<bean class="com.ashok.entity.HibernatePersistenceUnitPostProcessor"/>-->
        <!--</property>-->
        <!--<property name="jpaProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.jdbc.batch_size">10</prop>-->
                <!--<prop key="hibernate.order_inserts">true</prop>-->
                <!--<prop key="hibernate.order_updates">true</prop>-->
            <!--</props>-->
        <!--</property>-->
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.jdbc.batch_size" value="10"/>
                <entry key="hibernate.jdbc.fetch_size" value="50"/>
                <entry key="hibernate.order_inserts" value="true"/>
                <entry key="hibernate.order_updates" value="true"/>
                <entry key="hibernate.jdbc.batch_versioned_data" value="true"/>
                <entry key="hibernate.format_sql" value="true"/>
            </map>
        </property>
        <!--<property name="jpaProperties">-->
            <!---->
        <!--</property>-->
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <!--<property name="dataSource" ref="dataSource"/>-->
    </bean>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
        <property name="defaultPersistenceUnitName" value="test-jpa"/>
    </bean>

    <bean id="proxyConfig" factory-bean="proxyConfigSupport"
          factory-method="create"/>

    <bean id="proxyConfigSupport" class="net.ttddyy.dsproxy.support.ProxyConfigSpringXmlSupport">
        <property name="dataSourceName" value="my-ds"/>
        <property name="queryListener" ref="queryListener"/>
        <property name="methodListener" ref="methodListener"/>
    </bean>

    <bean id="queryListener" class="net.ttddyy.dsproxy.listener.ChainListener">
        <property name="listeners">
            <list>
                <bean class="net.ttddyy.dsproxy.listener.logging.SystemOutQueryLoggingListener"/>
            </list>
        </property>
    </bean>

    <bean id="methodListener" class="net.ttddyy.dsproxy.listener.CompositeMethodListener">
        <property name="listeners">
            <list>
                <bean class="net.ttddyy.dsproxy.listener.TracingMethodListener"/>
            </list>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" order="0" proxy-target-class="true"/>


</beans>